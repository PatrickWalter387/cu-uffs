version: '3.1'

services:
  postgres:
    image: postgres:13
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  redis:
    image: redis:5.0.8
    restart: always
    volumes:
      - "/var/lib/docker/volumes/redis/data:/data:z"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    entrypoint: docker-entrypoint.sh --requirepass ${REDIS_PASSWORD}

  app:
    build:
      context: ./../
      dockerfile: ./docker/app/.Dockerfile
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - ../public:/var/www/html/public
      - ../resource:/var/www/html/resource
      - ../routes:/var/www/html/routes
      - ../app:/var/www/html/app
      - ../config:/var/www/html/config
      - ../database:/var/www/html/database
      - ../storage:/var/www/html/storage
      - ../resources:/var/www/html/resources
      - ../artisan:/var/www/html/artisan
      - ../.env:/var/www/html/.env
      - ../node_modules:/var/www/html/node_modules 
    depends_on:
      - postgres
      - redis

  horizon:
    build:
      context: ./../
      dockerfile: ./docker/horizon/.Dockerfile
    restart: always
    ports:
      - '8001:8001'
    volumes:
      - ../public:/var/www/html/public
      - ../resource:/var/www/html/resource
      - ../routes:/var/www/html/routes
      - ../app:/var/www/html/app
      - ../config:/var/www/html/config
      - ../database:/var/www/html/database
      - ../storage:/var/www/html/storage
      - ../resources:/var/www/html/resources
      - ../artisan:/var/www/html/artisan
      - ../.env:/var/www/html/.env
      - ../node_modules:/var/www/html/node_modules 
    depends_on:
      - app
networks:
  snr:
    ipam:
      driver: default
